(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{539:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("blockquote",[t("p",[s._v("在前端工程化的道路上，少不了许许多多出色的工具的铺垫，今天就来学习一下，在团队合作的项目中，如何规范大家提交的commit，以便项目的管理。")])]),s._v(" "),t("h2",{attrs:{id:"commitlint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[s._v("#")]),s._v(" commitlint")]),s._v(" "),t("p",[s._v("commitlint是对我们提交commit的格式的一种约束，可以起到很好的统一作用，如果有人提交的commit不符合规范，那就可以阻止本次提交。")]),s._v(" "),t("ul",[t("li",[s._v("提交格式 (注意冒号后面有空格)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("optional scope"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("description"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("type ：用于表明我们这次提交的改动类型，是新增了功能？还是修改了测试代码？又或者是更新了文档？\noptional scope：一个可选的修改范围。用于标识此次提交主要涉及到代码中哪个模块。\ndescription：一句话描述此次提交的主要内容，做到言简意赅。")])]),s._v(" "),t("ul",[t("li",[s._v("常见的type类型")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("类型")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("build")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("编译相关的修改，例如发布版本、对项目构建或者依赖的改动")])]),s._v(" "),t("tr",[t("td",[s._v("chore")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("其他修改, 比如改变构建流程、或者增加依赖库、工具等")])]),s._v(" "),t("tr",[t("td",[s._v("ci")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("持续集成修改")])]),s._v(" "),t("tr",[t("td",[s._v("docs")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("文档修改")])]),s._v(" "),t("tr",[t("td",[s._v("feat")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("新特性、新功能")])]),s._v(" "),t("tr",[t("td",[s._v("fix")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("修改bug")])]),s._v(" "),t("tr",[t("td",[s._v("perf")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("优化相关，比如提升性能、体验")])]),s._v(" "),t("tr",[t("td",[s._v("refactor")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("代码重构")])]),s._v(" "),t("tr",[t("td",[s._v("revert")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("回滚到上一个版本")])]),s._v(" "),t("tr",[t("td",[s._v("style")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("代码格式修改, 注意不是 css 修改")])]),s._v(" "),t("tr",[t("td",[s._v("test")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("测试用例修改")])])])]),s._v(" "),t("p",[s._v("在使用他之前还需要认识一个东西，那就是husky")]),s._v(" "),t("h2",{attrs:{id:"husky"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[s._v("#")]),s._v(" husky")]),s._v(" "),t("blockquote",[t("p",[s._v("Modern native Git hooks made easy (轻松创建现代化的原生 git hooks) Husky improves your commits and more 🐶 woof!")])]),s._v(" "),t("p",[s._v("它可以在 git 提交代码的前后，执行一系列的 git hooks，以对代码、文件等进行预设的检查，一旦检查不通过，就可以阻止当前的代码提交，避免了不规范的代码和 git 提交出现在项目中。")]),s._v(" "),t("p",[s._v("通俗一点来说就是husky可以执行git的一些列钩子，例如git commit,git push等等。通过他，再搭配上commitlint，就可以完成我们的规范提交commit的操作了，下面就来一起操作一下吧")]),s._v(" "),t("h2",{attrs:{id:"开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[s._v("#")]),s._v(" 开始")]),s._v(" "),t("p",[s._v("首先安装一下这两个依赖")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" husky\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev @commitlint/config-conventional @commitlint/cli\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("接下来在根目录创建一个配置文件"),t("code",[s._v("commitlint.config.js")]),s._v("，当然也可以是 ."),t("code",[s._v("commitlintrc.js")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@commitlint/config-conventional'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("下面就是去配置husky了。")]),s._v(" "),t("p",[s._v("在husky（6.0.0）版本之前以及之后的配置方式有点不一样，低版本的配置方法如下")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("package.json")]),s._v("中写入")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"husky"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"hooks"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"pre-commit"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在执行git commit之前先自动执行npm run test命令")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commit-msg"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commitlint -e $HUSKY_GIT_PARAMS"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 校验commit时添加的备注信息是否符合我们要求的规范")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("6.0.0版本之后需要我们自己去生成脚本")]),s._v(" "),t("p",[s._v("首先在package.json中配置")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prepare"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky install"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("执行这个命令会生成一个.husky/的文件夹，这里面可以对husky进行一些列配置以及放置钩子脚本")]),s._v(" "),t("p",[s._v("执行")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("npx husky "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/pre-commit "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run test"')]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("运行完该命令后我们会看到.husky/目录下新增了一个名为pre-commit的shell脚本。也就是说在在执行git commit命令时会先执行pre-commit这个脚本。pre-commit脚本内容如下：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('/_/husky.sh"')]),s._v("\n   \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("可以看到该脚本的功能就是执行npm run test这个命令")]),s._v(" "),t("p",[s._v("再执行")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("npx husky "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/commit-msg "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'npx --no-install commitlint --edit \"$1\"'")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("就会生成commit-msg脚本")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('/_/husky.sh"')]),s._v("\n\nnpx --no-install commitlint "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--edit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("这样，当我们在提交代码的时候就可以进行自动校验或者在commit之前执行一些脚本拉，比如在提交commit之前先执行一下测试脚本，或者先执行lint代码检查之类的。")]),s._v(" "),t("h2",{attrs:{id:"更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[s._v("#")]),s._v(" 更新")]),s._v(" "),t("p",[s._v("husky9.0版本之后 不在需要给执行脚本添加")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('#!/usr/bin/env sh\n. "$(dirname -- "$0")/_/husky.sh"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("拿commit-msg文件举例，我们只需要在里面写上")]),s._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[s._v("npx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("no"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("install commitlint "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("edit $1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这样就可以了")])])}),[],!1,null,null,null);t.default=e.exports}}]);