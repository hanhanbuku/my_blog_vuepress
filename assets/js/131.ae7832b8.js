(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{567:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("blockquote",[t("p",[s._v("上一篇文章讲了Vue3的响应式，这篇文章就来解析一下和响应式息息相关的"),t("code",[s._v("计算属性")]),s._v("和"),t("code",[s._v("监视")]),s._v("，"),t("code",[s._v("computed")]),s._v("和"),t("code",[s._v("watch")]),s._v("也是日常开发中常用的api，他们的实现都是基于"),t("code",[s._v("响应式原理")]),s._v("去做的，下面就来看看具体是如何实现的吧")])]),s._v(" "),t("h2",{attrs:{id:"computed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[s._v("#")]),s._v(" computed")]),s._v(" "),t("p",[s._v("首先来讲讲"),t("code",[s._v("computed")]),s._v("，聊到这个api首先需要知道他的"),t("code",[s._v("特性")]),s._v("，有以下"),t("code",[s._v("两点")])]),s._v(" "),t("ul",[t("li",[s._v("本质上是一个"),t("code",[s._v("依赖")]),s._v("于"),t("code",[s._v("其他响应式数据")]),s._v("计算出的"),t("code",[s._v("最终值")])]),s._v(" "),t("li",[s._v("具有"),t("code",[s._v("缓存")]),s._v("的特性")])]),s._v(" "),t("p",[s._v("根据上一篇文章的"),t("code",[s._v("effect函数")]),s._v("（也就是响应式系统中生成依赖的工具函数）我们可以大致写出如下代码")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("createComputed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("constructor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("getter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_effect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreateEffect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("getter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isCache "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个依赖")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isCache "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//缓存标识，只有当他为true时才去重新计算值")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isCache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isCache "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_value\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("val")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'计算属性不允许赋值！'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("computed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("getter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("createComputed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("getter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("首先我们创建一个初始化计算属性的类，在这个类的构造函数里我们去"),t("code",[s._v("创建")]),s._v("了一个"),t("code",[s._v("effect")]),s._v("，并且传入了"),t("code",[s._v("计算函数")]),s._v("和"),t("code",[s._v("另外一个函数")]),s._v("。下面贴一下和依赖相关的代码，更详细的了解请看Vue3响应式原理")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 存放所有依赖")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" globalMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WeakMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" activityEffect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于保存当前所需要被收集的依赖，对标Vue2中new Watcher时将自身保存在Dep的target属性上一样")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreateEffect")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n         * @param fn 更新试图的函数\n         * @param scheduler 触发计算属性的更新函数\n         */")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("constructor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("fn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("scheduler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fn\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scheduler "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" scheduler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            activityEffect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将自身设置为当前需要被收集的依赖")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" res "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            activityEffect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" res\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("直接看代码可能有点懵，下面我用文字描述一下计算属性是如何工作的。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" proxy1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" proxy2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" computedVal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("computed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" proxy1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" proxy2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("上面是一个很简单的计算属性的使用例子，他的运行步骤如下")]),s._v(" "),t("ul",[t("li",[s._v("首先我们调用"),t("code",[s._v("computed")]),s._v("函数，并传入计算的"),t("code",[s._v("回调函数")]),s._v("。")]),s._v(" "),t("li",[s._v("此时"),t("code",[s._v("computed")]),s._v("函数调用"),t("code",[s._v("new createComputed")]),s._v("进行初始化，此时的函数可以这样表示")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("createComputed")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" proxy1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" proxy2\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("接下来会在"),t("code",[s._v("createComputed")]),s._v("这个类的构造函数里去"),t("code",[s._v("创建")]),s._v("一个"),t("code",[s._v("依赖")]),s._v("，也就是走了"),t("code",[s._v("new CreateEffect(getter,()=>this.isCache = true)")]),s._v(",并且把计算函数和另外一个触发计算属性的函数传入进去了。下文中我们把这个effect暂且称之为"),t("code",[s._v("computedEffect")])])]),s._v(" "),t("li",[t("p",[s._v("当我们在访问这个计算属性的时候，就会触发到"),t("code",[s._v("get value")]),s._v("的拦截")])]),s._v(" "),t("li",[t("p",[s._v("而"),t("code",[s._v("get value")]),s._v("这个函数里就会去执行之前创建出来的那个依赖的"),t("code",[s._v("run")]),s._v("方法，effect的"),t("code",[s._v("run")]),s._v("方法会调用我们之前传入的"),t("code",[s._v("getter")]),s._v("函数，并且返回"),t("code",[s._v("getter")]),s._v("的值。")])]),s._v(" "),t("li",[t("p",[s._v("至此，计算属性就完成了对依赖的计算，但还没完。下面抛出一个问题，因为计算属性是依赖于"),t("code",[s._v("被计算")]),s._v("的属性的，那如果"),t("code",[s._v("被计算")]),s._v("的属性"),t("code",[s._v("没有")]),s._v("发生变化，我们还有必要在"),t("code",[s._v("get value")]),s._v("的时候去"),t("code",[s._v("重复")]),s._v("的执行计算函数吗？")])]),s._v(" "),t("li",[t("p",[s._v("答案当然是"),t("code",[s._v("没必要")]),s._v("了，所以在"),t("code",[s._v("get value")]),s._v("的时候有这么一个判断")])])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isCache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isCache "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_value\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("只有当"),t("code",[s._v("isCache")]),s._v("为"),t("code",[s._v("true")]),s._v("的时候才回去"),t("code",[s._v("重新计算")]),s._v("值，并且会把"),t("code",[s._v("isCache")]),s._v("改为"),t("code",[s._v("false")]),s._v("，防止下次访问计算属性的时候进行没必要的计算。")])]),s._v(" "),t("li",[t("p",[s._v("那么问题来了，我们怎么知道被依赖的属性发生了变化呢？也就是说什么时候把"),t("code",[s._v("isCache")]),s._v("变为"),t("code",[s._v("true")]),s._v("呢？")])]),s._v(" "),t("li",[t("p",[s._v("还记得"),t("code",[s._v("new CreateEffect(getter,()=>this.isCache = true)")]),s._v("这行代码里我们传入的第二个函数吗？他就是用来修改"),t("code",[s._v("isCache")]),s._v("的值的。至于他什么时候触发，我们就要回到"),t("code",[s._v("第一次")]),s._v("获取计算属性的值的时候")])]),s._v(" "),t("li",[t("p",[s._v("当我们第一次触发计算属性的"),t("code",[s._v("get")]),s._v("的时候由于"),t("code",[s._v("isCache")]),s._v("默认值是"),t("code",[s._v("true")]),s._v("，所以此时我们会触发"),t("code",[s._v("computedEffect")]),s._v("的"),t("code",[s._v("run")]),s._v("方法，")])]),s._v(" "),t("li",[t("p",[s._v("由于我们触发了依赖的"),t("code",[s._v("run")]),s._v(" 方法，所以此时的"),t("code",[s._v("被激活")]),s._v("的依赖(也就是"),t("code",[s._v("activityEffect")]),s._v(")会变成"),t("code",[s._v("computedEffect")]),s._v("，而当我们在执行计算函数的时候，会触发"),t("code",[s._v("被依赖")]),s._v("的响应式数据的"),t("code",[s._v("get")]),s._v("，也就是上文中"),t("code",[s._v("proxy1")]),s._v("和"),t("code",[s._v("proxy2")]),s._v("的get。")])]),s._v(" "),t("li",[t("p",[s._v("这个时候"),t("code",[s._v("proxy1")]),s._v("和"),t("code",[s._v("proxy2")]),s._v("的"),t("code",[s._v("依赖数组")]),s._v("里都会把"),t("code",[s._v("computedEffect")]),s._v("添加进去。当我们对"),t("code",[s._v("proxy1")]),s._v("和"),t("code",[s._v("proxy2")]),s._v("进行"),t("code",[s._v("set")]),s._v("操作的时候会触发所有"),t("code",[s._v("相关依赖")]),s._v("，而"),t("code",[s._v("computedEffect")]),s._v("同样也会被触发。")])]),s._v(" "),t("li",[t("p",[s._v("再回顾一段"),t("code",[s._v("trigger")]),s._v("（触发所有依赖）中的代码")])])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("\neffectSet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("effect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scheduler "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scheduler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("由于"),t("code",[s._v("computedEffect.scheduler")]),s._v("的存在，所以再触发依赖时回去调"),t("code",[s._v("用scheduler")]),s._v("函数，也就是上文中我们传入的"),t("code",[s._v("()=>this.isCache = true")]),s._v("函数")]),s._v(" "),t("li",[s._v("这样依赖"),t("code",[s._v("isCache")]),s._v("就变为"),t("code",[s._v("true")]),s._v("了，而当我们下一次获取计算属性的值的时候就会"),t("code",[s._v("重新去执行")]),s._v("计算函数了。")])]),s._v(" "),t("p",[s._v("以上就是计算属性最最最完整的执行逻辑了，如果还看不懂我就没办法了。")]),s._v(" "),t("h2",{attrs:{id:"computed-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#computed-总结"}},[s._v("#")]),s._v(" computed 总结")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("computed")]),s._v(" "),t("p",[t("code",[s._v("computed")]),s._v("其实就是创建了一个"),t("code",[s._v("新的依赖")]),s._v("并将"),t("code",[s._v("getter函数")]),s._v("作为依赖的"),t("code",[s._v("更新函数")]),s._v("，然后拦截这个计算属性的"),t("code",[s._v("get")]),s._v("，在get中执行"),t("code",[s._v("getter函数")]),s._v("返回最终值，并且在执行函数之前会"),t("code",[s._v("判断")]),s._v("当前"),t("code",[s._v("是否需要")]),s._v("重新计算，这个判断的值则是通过"),t("code",[s._v("被依赖")]),s._v("的属性"),t("code",[s._v("发生变更")]),s._v("才去改变的\n在初次访问计算属性的时候会将"),t("code",[s._v("计算依赖")]),s._v("添加进"),t("code",[s._v("被依赖")]),s._v("的属性的"),t("code",[s._v("依赖数组")]),s._v("内，当"),t("code",[s._v("被计算的属性")]),s._v("发生变化，会"),t("code",[s._v("触发")]),s._v("这个计算依赖，从而导致计算属性是否重新计算的"),t("code",[s._v("流程控制")]),s._v("变量发生变化，这样当我们下一次获取计算属性时就会"),t("code",[s._v("重新计算")]),s._v("，否则会使用"),t("code",[s._v("缓存数据")])])]),s._v(" "),t("h2",{attrs:{id:"watch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[s._v("#")]),s._v(" watch")]),s._v(" "),t("p",[s._v("说完了计算属性，下面再来学习一下"),t("code",[s._v("watch")]),s._v(","),t("code",[s._v("watch")]),s._v("其实和"),t("code",[s._v("computed")]),s._v("一样，都是借助依赖函数"),t("code",[s._v("effect")]),s._v("来完成\n首先简写的watch如下")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Watch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("fn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("opt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" _effect\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" oldVal\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("job")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" _effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cb")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("oldVal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            oldVal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        _effect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreateEffect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("job")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        oldVal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" _effect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("代码剖析：首先函数接受"),t("code",[s._v("三个参数")]),s._v("，对应我们在使用"),t("code",[s._v("watch")]),s._v("时传入的那三个函数——"),t("code",[s._v("被监听的值")]),s._v("，"),t("code",[s._v("回调函数")]),s._v("，"),t("code",[s._v("配置项")]),s._v("。\nfn里需要接收"),t("code",[s._v("一个函数")]),s._v("，并且返回"),t("code",[s._v("被监视的值")]),s._v("。这一块为什么要这么写？\n（还记不记得在创建依赖时我们需要传入一个"),t("code",[s._v("更新函数")]),s._v("，依赖在被执行的时候会去调用这个"),t("code",[s._v("更新函数")]),s._v("。而这里"),t("code",[s._v("watch")]),s._v("会把第一个参数作为依赖的更新函数传入。这样当我们创建依赖的时候就会触发"),t("code",[s._v("被监视属性的get")]),s._v("，他就会收集起这个"),t("code",[s._v("监视的依赖")]),s._v("了。）\n回到函数里，首先在函数体内创建了一个"),t("code",[s._v("job函数")]),s._v("，这个函数的作用就是获取当前"),t("code",[s._v("依赖的最新值")]),s._v("，然后"),t("code",[s._v("调用cb")]),s._v("将"),t("code",[s._v("新值旧值")]),s._v("传递出去。而"),t("code",[s._v("调用job函数")]),s._v("的时机是什么时候呢？\n和"),t("code",[s._v("computed")]),s._v("类似，"),t("code",[s._v("computed")]),s._v("再创建依赖的时候传递了"),t("code",[s._v("第二个参数")]),s._v("给依赖，他通过这个参数来实现"),t("code",[s._v("缓存")]),s._v("的功能。而"),t("code",[s._v("watch")]),s._v("也是通过这种方式来实现"),t("code",[s._v("调用cb")]),s._v("的。\n当被监视的属性的"),t("code",[s._v("set")]),s._v("被触发后，调用监视依赖。此时我们传入的"),t("code",[s._v("()=>job()")]),s._v(",就对应了依赖的"),t("code",[s._v("scheduler")]),s._v("。依赖就会去执行这个函数，而不是执行"),t("code",[s._v("run")]),s._v("方法。\n在job中我们"),t("code",[s._v("手动触发")]),s._v("依赖的"),t("code",[s._v("run")]),s._v("方法得到最新值然后调用cb将新旧两个值传过去。这样一个监视就完成了。")]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[t("code",[s._v("computed")]),s._v("和"),t("code",[s._v("watch")]),s._v("的实现其实都"),t("code",[s._v("离不开")]),s._v("依赖，而依赖在设计的过程中开放了"),t("code",[s._v("第二个回调的参数")]),s._v("给这两个Api，所以两者都是借助依赖然后在不同的时机去执行回调函数来实现的。两者其实在实现上非常的像，都是依赖于一些响应式数据的变化而去做某些事，不同点是计算属性是一个具体的值，由被依赖的属性计算而来。而watch的动作主要在回调函数上，回调函数的内容可以自行定义。并且计算属性带有"),t("code",[s._v("缓存")]),s._v("，而watch没有")])])}),[],!1,null,null,null);t.default=e.exports}}]);